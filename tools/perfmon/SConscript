Import('env idir_bin')

perfmonEnv = env.Clone()

if env['big_lib']:
	Import('libdisko_shared')
	perfmonEnv['LIBS'] = (['disko']) + perfmonEnv['LIBS']
elif env['static_lib']:
	Import('libdisko_static')
	perfmonEnv['LIBS'] = (['disko']) + perfmonEnv['LIBS']
else:
	Import('libmmsinfo libmmsconfig libmmstools libmmsgui libmmscore libmmsinput libmmsbase')
	if env['media']:
		Import('libmmsmedia')
		perfmonEnv['LIBS'] = (['mmsmedia', 'mmsinfo', 'mmsconfig', 'mmstools', 'mmsgui', 'mmscore', 'mmsinput', 'mmsbase']) + perfmonEnv['LIBS']
	else:
		perfmonEnv['LIBS'] = (['mmsinfo', 'mmsconfig', 'mmstools', 'mmsgui', 'mmscore', 'mmsinput', 'mmsbase']) + perfmonEnv['LIBS']

perfmonEnv.Append(LIBPATH = ['../../../lib'])
perfmon = perfmonEnv.Program('../../../bin/perfmon', Glob('src/*.cpp'))

if env['big_lib']:
	Depends(perfmon, [libdisko_shared])
elif env['static_lib']:
	Depends(perfmon, [libdisko_static])
else:
	Depends(perfmon, [libmmsinfo, libmmsconfig, libmmstools, libmmsgui, libmmscore, libmmsinput, libmmsbase])
	if env['media']:
		Depends(perfmon, [libmmsmedia])

env.Install(idir_bin, perfmon)
Export('perfmon')
